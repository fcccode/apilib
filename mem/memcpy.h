#ifndef memcpy_h__
#define memcpy_h__

///////////////////////////////////////////////////////////////////////////////////////////////////

namespace apilib
{
  //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//

  /**
   * Копирование данных.
   *
   * @param dst  адрес для записи.
   * @param src  адрес для чтения.
   * @param size размер копируемых данных.
   *
   * @return true в случае успеха, false в случае ошибки.
  */
  bool memcpy(void* dst, const void* src, size_t size);

  /**
   * Копирование данных.
   *
   * @param dst      адрес для записи.
   * @param dst_size размер участка памяти для записи, максимальный размер записываемых данных.
   * @param src      адрес для чтения.
   * @param src_size размер участка памяти для чтения, определяет количество копируемых данных.
   *
   * @return true в случае успеха, false в случае ошибки.
  */
  bool memcpy_s(void* dst, size_t dst_size, const void* src, size_t src_size);

  /**
   * Копирование данных с учетом пересечения участков памяти.
   *
   * @param dst  адрес для записи.
   * @param src  адрес для чтения.
   * @param size размер копируемых данных.
   *
   * @return true в случае успеха, false в случае ошибки.
  */
  bool memmove(void* dst, const void* src, size_t size);

  /**
   * Копирование данных с учетом пересечения участков памяти.
   *
   * @param dst      адрес для записи.
   * @param dst_size размер участка памяти для записи, максимальный размер записываемых данных.
   * @param src      адрес для чтения.
   * @param src_size размер участка памяти для чтения, определяет количество копируемых данных.
   *
   * @return true в случае успеха, false в случае ошибки.
  */
  bool memmove_s(void* dst, size_t dst_size, const void* src, size_t src_size);

  /**
   * Взаимообмен данными двух участков памяти.
   *
   * @param mem1 первый участок памяти.
   * @param mem2 второй участок памяти.
   * @param size размер данных.
   *
   * @return true в случае успеха, false в случае ошибки.
  */
  bool memswap(void* mem1, void* mem2, size_t size);

  //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
};

///////////////////////////////////////////////////////////////////////////////////////////////////

#endif // memcpy_h__