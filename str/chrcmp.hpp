#ifndef chrcmp_hpp__
#define chrcmp_hpp__

///////////////////////////////////////////////////////////////////////////////////////////////////

namespace apilib
{
  //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//

  /**
   * [Шаблон] Сравнение двух символов.
   *
   * @param c1  первый символ.
   * @param c2  второй символ.
   *
   * @return  ( 1) - первый символ больше второго символа,
   *          (-1) - второй символ больше первого символа,
   *          ( 0) - символы идентичны.
  */
  template<typename X>
  inline int __chrcmp_x(X c1, X c2)
  {
    if(c1 > c2)return( 1);
    if(c1 < c2)return(-1);
    return( 0);
  }

  /**
   * [Шаблон] Сравнение двух символов без учета регистра английских букв.
   *
   * @param c1  первый символ.
   * @param c2  второй символ.
   *
   * @return  ( 1) - первый символ больше второго символа,
   *          (-1) - второй символ больше первого символа,
   *          ( 0) - символы идентичны.
  */
  template<typename X>
  inline int __chrcmp_ex(X c1, X c2)
  {
    if(c1 >= 'a' && c1 <= 'z')c1 -= ('a' - 'A');
    if(c2 >= 'a' && c2 <= 'z')c2 -= ('a' - 'A');
    if(c1 > c2)return( 1);
    if(c1 < c2)return(-1);
    return( 0);
  }

  /**
   * [Шаблон] Проверка идентичности символов.
   *
   * @param c1  первый символ.
   * @param c2  второй символ.
   *
   * @return  true  - символы идентичны,
   *          false - символы отличаются.
  */
  template<typename X>
  inline bool __chrequ_x(X c1, X c2)
  {
    return ((c1 == c2) ? (true) : (false));
  }

  /**
   * [Шаблон] Проверка идентичности символов без учета регистра английских букв.
   *
   * @param c1  первый символ.
   * @param c2  второй символ.
   *
   * @return  true  - символы идентичны,
   *          false - символы отличаются.
  */
  template<typename X> 
  inline bool __chrequ_ex(X c1, X c2)
  {
    if(c1 >= 'a' && c1 <= 'z')c1 -= ('a' - 'A');
    if(c2 >= 'a' && c2 <= 'z')c2 -= ('a' - 'A');
    return ((c1 == c2) ? (true) : (false));
  }

  //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
};

///////////////////////////////////////////////////////////////////////////////////////////////////

#endif // chrcmp_hpp__