#ifndef chrcmp_h__
#define chrcmp_h__

///////////////////////////////////////////////////////////////////////////////////////////////////

namespace apilib
{
  //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//

  /**
   * Сравнение двух символов.
   *
   * @param c1  первый символ.
   * @param c2  второй символ.
   *
   * @return  ( 1) - первый символ больше второго символа,
   *          (-1) - второй символ больше первого символа,
   *          ( 0) - символы идентичны.
  */
  int chrcmp_a(char c1, char c2);
  int chrcmp_w(wchar_t c1, wchar_t c2);

  /**
   * Сравнение двух символов без учета регистра английских букв.
   *
   * @param c1  первый символ.
   * @param c2  второй символ.
   *
   * @return  ( 1) - первый символ больше второго символа,
   *          (-1) - второй символ больше первого символа,
   *          ( 0) - символы идентичны.
  */
  int chrcmp_ea(char c1, char c2);
  int chrcmp_ew(wchar_t c1, wchar_t c2);

  /**
   * Проверка идентичности символов.
   *
   * @param c1  первый символ.
   * @param c2  второй символ.
   *
   * @return  true  - символы идентичны,
   *          false - символы отличаются.
  */
  bool chrequ_a(char c1, char c2);
  bool chrequ_w(wchar_t c1, wchar_t c2);

  /**
   * Проверка идентичности символов без учета регистра английских букв.
   *
   * @param c1  первый символ.
   * @param c2  второй символ.
   *
   * @return  true  - символы идентичны,
   *          false - символы отличаются.
  */
  bool chrequ_ea(char c1, char c2);
  bool chrequ_ew(wchar_t c1, wchar_t c2);

  //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
};

///////////////////////////////////////////////////////////////////////////////////////////////////

#endif // chrcmp_h__