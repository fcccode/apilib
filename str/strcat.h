#ifndef strcat_h__
#define strcat_h__

///////////////////////////////////////////////////////////////////////////////////////////////////

namespace apilib
{
  //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//

  /**
   * Присоединение одной строки в конец другой строки.
   *
   * @param dst  конечная строка.
   * @param src  исходная строка.
   *
   * @return  длина модифицированной конечной строки без учета нулевого символа,
   *          в случае ошибки 0.
  */
  size_t strcat_a(char* dst, const char* src);
  size_t strcat_w(wchar_t* dst, const wchar_t* src);

  /**
   * Присоединение одной строки в конец другой строки.
   *
   * @param dst     конечная строка.
   * @param src     исходная строка.
   * @param maxcnt  максимальное количество присоединяемых символов исходной строки.
   *
   * @return  длина модифицированной конечной строки без учета нулевого символа,
   *          в случае ошибки 0.
  */
  size_t strcat_na(char* dst, const char* src, size_t maxcnt);
  size_t strcat_nw(wchar_t* dst, const wchar_t* src, size_t maxcnt);

  /**
   * Присоединение одной строки в конец другой строки.
   *
   * @param dst     конечная строка.
   * @param src     исходная строка.
   * @param maxlen  максимальная длина конечной строки с учетом нулевого символа.
   *
   * @return  требуемая длина конечной строки без учета нулевого символа,
   *          требуемая длина >= maxlen означает недостаточный размер буфера,
   *          в случае ошибки 0.
  */
  size_t strcat_la(char* dst, const char* src, size_t maxlen);
  size_t strcat_lw(wchar_t* dst, const wchar_t* src, size_t maxlen);

  /**
   * Присоединение одной строки в конец другой строки.
   *
   * @param dst     конечная строка.
   * @param src     исходная строка.
   * @param maxlen  максимальная длина конечной строки с учетом нулевого символа.
   * @param maxcnt  максимальное количество присоединяемых символов исходной строки.
   *
   * @return  требуемая длина конечной строки без учета нулевого символа,
   *          требуемая длина >= maxlen означает недостаточный размер буфера,
   *          в случае ошибки 0.
  */
  size_t strcat_lna(char* dst, const char* src, size_t maxlen, size_t maxcnt);
  size_t strcat_lnw(wchar_t* dst, const wchar_t* src, size_t maxlen, size_t maxcnt);

  //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
};

///////////////////////////////////////////////////////////////////////////////////////////////////

#endif // strcat_h__