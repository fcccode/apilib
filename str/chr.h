#ifndef chr_h__
#define chr_h__

///////////////////////////////////////////////////////////////////////////////////////////////////

namespace apilib
{
  //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//

  /**
   * Является ли символ буквой или цифрой.
   *
   * @param c  символ.
   *
   * @return  1 - положительный результат,
   *          0 - отрицательный результат.
  */
  int isalnum_ea(char c);
  int isalnum_ew(wchar_t c);

  /**
   * Является ли символ буквой.
   *
   * @param c  символ.
   *
   * @return  1 - положительный результат,
   *          0 - отрицательный результат.
  */
  int isalpha_ea(char c);
  int isalpha_ew(wchar_t c);

  /**
   * Является ли символ пробелом или знаком табуляции (' ' или '\t').
   *
   * @param c  символ.
   *
   * @return  1 - положительный результат,
   *          0 - отрицательный результат.
  */
  int isblank_ea(char c);
  int isblank_ew(wchar_t c);

  /**
   * Является ли символ знаком перевода каретки или переноса строки ('\r' или '\n').
   *
   * @param c  символ.
   *
   * @return  1 - положительный результат,
   *          0 - отрицательный результат.
  */
  int isbreak_ea(char c);
  int isbreak_ew(wchar_t c);

  /**
   * Является ли символ непечатаемым управляющим знаком.
   *
   * @param c  символ.
   *
   * @return  1 - положительный результат,
   *          0 - отрицательный результат.
  */
  int iscntrl_ea(char c);
  int iscntrl_ew(wchar_t c);

  /**
   * Является ли символ цифрой.
   *
   * @param c  символ.
   *
   * @return  1 - положительный результат,
   *          0 - отрицательный результат.
  */
  int isdigit_ea(char c);
  int isdigit_ew(wchar_t c);

  /**
   * Является ли символ графическим (все печатаемые символы кроме пробела).
   *
   * @param c  символ.
   *
   * @return  1 - положительный результат,
   *          0 - отрицательный результат.
  */
  int isgraph_ea(char c);
  int isgraph_ew(wchar_t c);

  /**
   * Является ли символ буквой в нижнем регистре.
   *
   * @param c  символ.
   *
   * @return  1 - положительный результат,
   *          0 - отрицательный результат.
  */
  int islower_ea(char c);
  int islower_ew(wchar_t c);

  /**
   * Является ли символ печатаемым (все печатаемые символы включая пробел).
   *
   * @param c  символ.
   *
   * @return  1 - положительный результат,
   *          0 - отрицательный результат.
  */
  int isprint_ea(char c);
  int isprint_ew(wchar_t c);

  /**
   * Является ли символ знаком пунктуации (графические символы кроме букв и цифр).
   *
   * @param c  символ.
   *
   * @return  1 - положительный результат,
   *          0 - отрицательный результат.
  */
  int ispunct_ea(char c);
  int ispunct_ew(wchar_t c);

  /**
   * Является ли символ одним из эквивалентов пробела.
   *
   * @param c  символ.
   *
   * @return  1 - положительный результат,
   *          0 - отрицательный результат.
  */
  int isspace_ea(char c);
  int isspace_ew(wchar_t c);

  /**
   * Является ли символ буквой в верхнем регистре.
   *
   * @param c  символ.
   *
   * @return  1 - положительный результат,
   *          0 - отрицательный результат.
  */
  int isupper_ea(char c);
  int isupper_ew(wchar_t c);

  /**
   * Является ли символ шестнадцетиричной цифрой (цифры и буквы от 'A' до 'F' в разных регистрах).
   *
   * @param c  символ.
   *
   * @return  1 - положительный результат,
   *          0 - отрицательный результат.
  */
  int isxdigit_ea(char c);
  int isxdigit_ew(wchar_t c);

  /**
   * Конвертация английского символа в нижний регистр.
   *
   * @param c  символ.
   *
   * @return   символ в нижнем регистре или символ без изменений.
  */
  char tolower_ea(char c);
  wchar_t tolower_ew(wchar_t c);

  /**
   * Конвертация английского символа в верхний регистр.
   *
   * @param c  символ.
   *
   * @return   символ в верхнем регистре или символ без изменений.
  */
  char toupper_ea(char c);
  wchar_t toupper_ew(wchar_t c);

  //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
};

///////////////////////////////////////////////////////////////////////////////////////////////////

#endif // chr_h__